ylim = c(0,30)
)
## 바차트
barplot(
top10,
main = "제주도 여행코스 탑 10",
col = rainbow(10),
cex.names = 1.3,
las = 2,
ylim = c(0,30)
)
## 바차트
barplot(
top10,
main = "제주도 여행코스 탑 10",
col = rainbow(10),
cex.names = 1.0,
las = 2,
ylim = c(0,30)
)
## 바차트
bp <- barplot(
top10,
main = "제주도 여행코스 탑 10",
col = rainbow(10),
cex.names = 1.0,
las = 2,
ylim = c(0,30)
)
text(x = bp,
y = top10,
labels = lab,
col = 'black',
cex = 1.0
)
text(x = bp,
y = top10,
labels = lab,
col = 'black',
cex = 0.8
)
## 바차트
bp <- barplot(
top10,
main = "제주도 여행코스 탑 10",
col = rainbow(10),
cex.names = 1.0,
las = 2,
ylim = c(0,30)
)
text(x = bp,
y = top10,
labels = lab,
col = 'black',
cex = 0.8
)
## 바차트
bp <- barplot(
top10,
main = "제주도 여행코스 탑 10",
col = rainbow(10),
cex.names = 1.0,
las = 2,
ylim = c(0,30)
)
text(x = bp,
y = top10,
labels = lab,
col = 'black',
cex = 0.9
)
## 바차트
bp <- barplot(
top10,
main = "제주도 여행코스 탑 10",
col = rainbow(10),
cex.names = 1.0,
las = 2,
ylim = c(0,30)
)
text(x = bp,
y = top10,
labels = lab,
col = 'black',
cex = 0.9
)
text(
x = bp,
y = top10,
labels = paste(top10,"건"),
col = 'black',
cex = 0.6
)
## 바차트
bp <- barplot(
top10,
main = "제주도 여행코스 탑 10",
col = rainbow(10),
cex.names = 1.0,
las = 2,
ylim = c(0,30)
)
text(x = bp,
y = top10,
labels = lab,
col = 'black',
cex = 0.9
)
text(
x = bp,
y = top10-5,
labels = paste(top10,"건"),
col = 'black',
cex = 0.6
)
text(
x = bp,
y = top10-3,
labels = paste(top10,"건"),
col = 'black',
cex = 0.7
)
## 바차트
bp <- barplot(
top10,
main = "제주도 여행코스 탑 10",
col = rainbow(10),
cex.names = 1.0,
las = 2,
ylim = c(0,30)
)
text(x = bp,
y = top10,
labels = lab,
col = 'black',
cex = 0.9
)
text(
x = bp,
y = top10-3,
labels = paste(top10,"건"),
col = 'black',
cex = 0.7
)
## 바차트
bp <- barplot(
top10,
main = "제주도 여행코스 탑 10",
col = rainbow(10),
cex.names = 1.0,
las = 2,
ylim = c(0,30)
)
text(x = bp,
y = top10,
labels = lab,
col = 'black',
cex = 0.9
)
text(
x = bp,
y = top10-2,
labels = paste(top10,"건"),
col = 'black',
cex = 0.7
)
## 바차트
bp <- barplot(
top10,
main = "제주도 여행코스 탑 10",
col = rainbow(10),
cex.names = 1.0,
las = 2,
ylim = c(0,30)
)
text(x = bp,
y = top10,
labels = lab,
col = 'black',
cex = 0.9
)
text(
x = bp,
y = top10-2.5,
labels = paste(top10,"건"),
col = 'black',
cex = 0.7
)
##3D파이차트
install.packages("plotrix")
library(plotrix)
library(plotrix)
plotrix::pie3D(
top10,
col = rainbow(10),
cex = 0.9,
labels = lab,
explode = 0.5
)
plotrix::pie3D(
top10,
col = rainbow(10),
cex = 0.8,
labels = lab,
explode = 0.5
)
plotrix::pie3D(
top10,
col = rainbow(10),
cex = 0.7,
labels = lab,
explode = 0.1
)
plotrix::pie3D(
top10,
col = rainbow(10),
cex = 0.4,
labels = lab,
explode = 0.1
)
plotrix::pie3D(
top10,
col = rainbow(10),
cex = 0.4,
labels = lab,
explode = 0.05
)
plotrix::pie3D(
top10,
col = rainbow(10),
cex = 0.1,
labels = lab,
explode = 0.05
)
plotrix::pie3D(
top10,
col = rainbow(10),
cex = 0,
labels = lab,
explode = 0.05
)
plotrix::pie3D(
top10,
col = rainbow(10),
cex = 0.1,
labels = lab,
explode = 0.1
)
plotrix::pie3D(
top10,
col = rainbow(10),
cex = 0.00001,
labels = lab,
explode = 0.1
)
##영어권분석 tm, 한국어 konlp
if("tm" %in% installed.packages("tm") == FALSE)install.packages("tm")
library(tm)
library(wordcloud)
tgt <- readLines("https://www.dropbox.com/s/28n2omtacbbp2aw/Shilla__Hotel__Review.txt?dl=1")
tgt1 <- VCorpus(VectorSource(tgt))
tgt1 <- tm_map(tgt,stripWhitespace) #공백처리
library(tm)
tgt1 <- tm_map(tgt,stripWhitespace) #공백처리
tgt1 <- tm_map(tgt1, tolower) #알파벳이면 소문자
tgt1 <- tm_map(tgt1, removePunctuation) #마침표, 공백, 세미콜론, 콜론제거
gsb <- c(stopwords(
(english)
))
tgt1 <- tm_map(tgt,tm::stripWhitespace) #공백처리
tgt1 <- tm_map(tgt1,tm::stripWhitespace) #공백처리
tgt1 <- tm_map(tgt1, tolower) #알파벳이면 소문자
tgt1 <- tm_map(tgt1, removePunctuation) #마침표, 공백, 세미콜론, 콜론제거
gsb <- c(stopwords(
(english)
))
gsb <- c(stopwords(
('english')
))
tgt1 <- tm_map(tgt1,removeWords,gsb)
tgt2 <- TermDocumentMatrix(tgt1)
findFreqTerms(tgt2,"신라호텔",0.5)
gsb <- c(stopwords(
('english')
))
tgt1 <- tm_map(tgt1,removeWords,gsb)
tgt2 <- TermDocumentMatrix(tgt1)
tgt1 <- tm_map(tgt1,removeWords,gsb)
tgt1 <- tm_map(tgt1, PlainTextDocument)
tgt2 <- TermDocumentMatrix(tgt1)
findFreqTerms(tgt2,5)
findAssocs(tgt1,"신라호텔",0.5)
findAssocs(tgt2,"신라호텔",0.5)
tgt3 <- as.matrix(tgt2)
head(tgt3)
head(tgt)
tgt1 <- VCorpus(VectorSource(tgt))
tgt1 <- tm_map(tgt1,tm::stripWhitespace) #공백처리
tgt1 <- tm_map(tgt1, tolower) #알파벳이면 소문자
tgt1 <- tm_map(tgt1, removePunctuation) #마침표, 공백, 세미콜론, 콜론제거
gsb <- c(stopwords(
('english')
))
tgt1 <- tm_map(tgt1,removeWords,gsb)
tgt1 <- tm_map(tgt1, PlainTextDocument)
tgt2 <- TermDocumentMatrix(tgt1)
findFreqTerms(tgt2,5)
findAssocs(tgt2,"신라호텔",0.5)
tgt3 <- as.matrix(tgt2)
head(tgt3)
tgt4 <- sort(rowSums(tgt3),decreasing = T)
tgt4
pal <- brewer.pal(8,"Dark2")
set.seed(1234)
wordcloud(
names(tgt4),
freq = tgt4,
scale = c(2.5,0.1), # 단어크기 0.1 ~ 2.5
rot.per = 0.25, # 회전비율
min.freq = 2, # 최저 빈도수 2회이상
random.order = F, # 고빈도 단어 중앙배치
random.color = T,
colors = pal
)
tgt4
pal <- brewer.pal(8,"Dark2")
set.seed(1234)
wordcloud(
names(tgt4),
freq = tgt4,
scale = c(2.5,0.1), # 단어크기 0.1 ~ 2.5
rot.per = 0.25, # 회전비율
min.freq = 2, # 최저 빈도수 2회이상
random.order = F, # 고빈도 단어 중앙배치
random.color = T,
colors = pal
)
legend(
0.3,0.9,
"서울신라호텔 이용후기",
cex = 0.8,
fill = NA,
border = NA,
bg = 'white',
text.col = 'red',
text.font = 2
box.col = 'red'
)
legend(
0.3,0.9,
"서울신라호텔 이용후기",
cex = 0.8,
fill = NA,
border = NA,
bg = 'white',
text.col = 'red',
text.font = 2,
box.col = 'red'
)
legend(
0.3,0.8,
"서울신라호텔 이용후기",
cex = 0.8,
fill = NA,
border = NA,
bg = 'white',
text.col = 'red',
text.font = 2,
box.col = 'red'
)
legend(
0.2,0.8,
"서울신라호텔 이용후기",
cex = 0.8,
fill = NA,
border = NA,
bg = 'white',
text.col = 'red',
text.font = 2,
box.col = 'red'
)
legend(
0.25,0.8,
"서울신라호텔 이용후기",
cex = 0.8,
fill = NA,
border = NA,
bg = 'white',
text.col = 'red',
text.font = 2,
box.col = 'red'
)
legend(
0.25,0.8,
"서울신라호텔 이용후기",
cex = 0.9,
fill = NA,
border = NA,
bg = 'white',
text.col = 'red',
text.font = 2,
box.col = 'red'
)
legend(
0.25,0.8,
"서울신라호텔 이용후기",
cex = 0.7,
fill = NA,
border = NA,
bg = 'white',
text.col = 'red',
text.font = 2,
box.col = 'red'
)
legend(
0.25,0.8,
"서울신라호텔 이용후기",
cex = 0.5,
fill = NA,
border = NA,
bg = 'white',
text.col = 'red',
text.font = 2,
box.col = 'red'
)
legend(
0.25,0.8,
"서울신라호텔 이용후기",
cex = 0.7,
fill = NA,
border = NA,
bg = 'white',
text.col = 'red',
text.font = 2,
box.col = 'red'
)
legend(
0.4,0.8,
"서울신라호텔 이용후기",
cex = 0.7,
fill = NA,
border = NA,
bg = 'white',
text.col = 'red',
text.font = 2,
box.col = 'red'
)
legend(
0.3,0.8,
"서울신라호텔 이용후기",
cex = 0.7,
fill = NA,
border = NA,
bg = 'white',
text.col = 'red',
text.font = 2,
box.col = 'red'
)
legend(
0.3,0.8,
"서울신라호텔 이용후기",
cex = 0.7,
fill = NA,
border = NA,
bg = 'white',
text.col = 'red',
text.font = 3,
box.col = 'red'
)
wordcloud(
names(tgt4),
freq = tgt4,
scale = c(2.5,0.1), # 단어크기 0.1 ~ 2.5
rot.per = 0.25, # 회전비율
min.freq = 2, # 최저 빈도수 2회이상
random.order = F, # 고빈도 단어 중앙배치
random.color = T,
colors = pal
)
legend(
0.3,0.8,
"서울신라호텔 이용후기",
cex = 0.7,
fill = NA,
border = NA,
bg = 'white',
text.col = 'red',
text.font = 2,
box.col = 'red'
)
if("shiny" %in% installed.packages("shiny") == FALSE)install.packages("shiny")
library(shiny)
ui <- shiny::fluidPage(
sliderInput(
inputId = "num1",
label = "숫자를 선택하세요",
value = 25,
min = 1,
max = 50,
step = 1
),
plotOutput("hist")
)
server <- function(input, output){
output$hist <- renderPlot({
hist(rnorm(input$num1),
main = "50 범위내에서 선택")
})
}
shiny::shinyApp(ui, server)
library(shiny)
library(shiny)
